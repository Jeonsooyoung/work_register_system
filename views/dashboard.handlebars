
<div class="wrapper" id="app">
	<div class="sidebar" data-color="red" data-image="assets/img/coffee.jpg">
		<div class="sidebar-wrapper">
			<div class="logo">
				<a href="#" class="simple-text">
						작업 관리
				</a>
			</div>
			<ul class="nav">
				<li>
					<a href="/">
					<i class="pe-7s-graph"></i>
					<p>업무 내역 기록</p>
					</a>
				</li>
				<li class="active">
					<a href="/dashboard">
					<i class="pe-7s-science"></i>
					<p>오늘의 체크리스트</p>
					</a>
				</li>
				<li>
					<a href="/workLibrary">
					<i class="pe-7s-user"></i>
					<p>나만의 라이브러리</p>
					</a>
				</li>
				<li>
					<a href="/dataInfoSet">
					<i class="pe-7s-note2"></i>
					<p>자료 사이트</p>
					</a>
				</li>             				
			</ul>
		</div>
	</div>

  <div class="main-panel">
		<nav class="navbar navbar-default navbar-fixed">
			<div class="container-fluid">
				<div class="navbar-header">
						<button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navigation-example-2">
								<span class="sr-only">Toggle navigation</span>
								<span class="icon-bar"></span>
								<span class="icon-bar"></span>
								<span class="icon-bar"></span>
						</button>
						<a class="navbar-brand" href="#">오늘의 체크리스트</a>
				</div>
			</div>
		</nav>


		<div class="content">
			<div class="container-fluid">
				<div class="row">
					<div clas="col-md-12 col-lg-6">
						<div class="card">
						<div class="header">
							<h4 class="title">업무 내역 기록</h4>
							{{!-- <span class="sub-tit">전체 할일 {{list.length}} / 완료된 할일 : {{countDone}} / 남은 할일 : {{list.length - countDone}} </span> --}}
						</div>
						<div class="content table-responsive">
							<table class="table table-hover table-striped">
							<colgroup>
								<col style="width: 10%;">
								<col style="width: auto;">
							</colgroup>
							<thead>
								<tr>
								<th>No</th>
								<th>기타사항(기록)</th>
								</tr>
							</thead>
							<tbody>
								{{#each lists}}
								<tr>
								<td class="table-no text-center">{{@key}}</td>
								<td>
									<div class="list">
									<p class="list-top" style="font-weight:bold;font-size:22px; color:#333">{{this.teamName}}</p>
									<div class="meta">
										<p style="margin:0; margin-bottom:5px;">업무 확인일 : {{this.getDate}}</p>
										<p style="margin:0; margin-bottom:5px;">작업 예정일 : {{this.startDate}} ~ {{this.dueDate}}</p>
										<p style="margin:0; margin-bottom:5px;"	>담당자 : {{this.manager}} 매니저</p>
									</div>
									<div class="description">
										<p>&lt업무 내용&gt</p>
										<p>{{this.tasks}}</p>
									</div>
									</div>
								</td>
								</tr>
								{{/each}}
							</tbody>
							</table>
						</div>

						</div>
					</div>
				</div>
			</div>
		</div>
		<footer class="footer">
				<div class="container-fluid">

						<p class="copyright pull-right">
								&copy; <a href="http://www.creative-tim.com">Creative Tim</a>, made with love for a better web
						</p>
				</div>
		</footer>
  </div>

</div>

<!-- 일정 추가 MODAL -->
<div class="modal fade" tabindex="-1" role="dialog" id="eventModal">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span
						aria-hidden="true">&times;</span></button>
				<h4 class="modal-title"></h4>
			</div>
			<div class="modal-body">

				<div class="row">
					<div class="col-xs-12">
						<label class="col-xs-4" for="edit-allDay">하루종일</label>
						<input class='allDayNewEvent' id="edit-allDay" type="checkbox"></label>
					</div>
				</div>

				<div class="row">
					<div class="col-xs-12">
						<label class="col-xs-4" for="edit-title">일정명</label>
						<input class="inputModal" type="text" name="edit-title" id="edit-title"
							required="required" />
					</div>
				</div>
				<div class="row">
					<div class="col-xs-12">
						<label class="col-xs-4" for="edit-start">시작</label>
						<input class="inputModal" type="text" name="edit-start" id="edit-start" />
					</div>
				</div>
				<div class="row">
					<div class="col-xs-12">
						<label class="col-xs-4" for="edit-end">끝</label>
						<input class="inputModal" type="text" name="edit-end" id="edit-end" />
					</div>
				</div>
				<div class="row">
					<div class="col-xs-12">
						<label class="col-xs-4" for="edit-type">구분</label>
						<select class="inputModal" type="text" name="edit-type" id="edit-type">
							<option value="카테고리1">카테고리1</option>
							<option value="카테고리2">카테고리2</option>
							<option value="카테고리3">카테고리3</option>
							<option value="카테고리4">카테고리4</option>
						</select>
					</div>
				</div>
				<div class="row">
					<div class="col-xs-12">
						<label class="col-xs-4" for="edit-color">색상</label>
						<select class="inputModal" name="color" id="edit-color">
							<option value="#D25565" style="color:#D25565;">빨간색</option>
							<option value="#9775fa" style="color:#9775fa;">보라색</option>
							<option value="#ffa94d" style="color:#ffa94d;">주황색</option>
							<option value="#74c0fc" style="color:#74c0fc;">파란색</option>
							<option value="#f06595" style="color:#f06595;">핑크색</option>
							<option value="#63e6be" style="color:#63e6be;">연두색</option>
							<option value="#a9e34b" style="color:#a9e34b;">초록색</option>
							<option value="#4d638c" style="color:#4d638c;">남색</option>
							<option value="#495057" style="color:#495057;">검정색</option>
						</select>
					</div>
				</div>
				<div class="row">
					<div class="col-xs-12">
						<label class="col-xs-4" for="edit-desc">설명</label>
						<textarea rows="4" cols="50" class="inputModal" name="edit-desc"
							id="edit-desc"></textarea>
					</div>
				</div>
			</div>
			<div class="modal-footer modalBtnContainer-addEvent">
				<button type="button" class="btn btn-default" data-dismiss="modal">취소</button>
				<button type="button" class="btn btn-primary" id="save-event">저장</button>
			</div>
			<div class="modal-footer modalBtnContainer-modifyEvent">
				<button type="button" class="btn btn-default" data-dismiss="modal">닫기</button>
				<button type="button" class="btn btn-danger" id="deleteEvent">삭제</button>
				<button type="button" class="btn btn-primary" id="updateEvent">저장</button>
			</div>
		</div><!-- /.modal-content -->
	</div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<!-- <div class="panel panel-default">

	<div class="panel-heading">
		<h3 class="panel-title">필터</h3>
	</div>

	<div class="panel-body">

		<div class="col-lg-6">
			<label for="calendar_view">구분별</label>
			<div class="input-group">
				<select class="filter" id="type_filter" multiple="multiple">
					<option value="카테고리1">카테고리1</option>
					<option value="카테고리2">카테고리2</option>
					<option value="카테고리3">카테고리3</option>
					<option value="카테고리4">카테고리4</option>
				</select>
			</div>
		</div>

		<div class="col-lg-6">
			<label for="calendar_view">등록자별</label>
			<div class="input-group">
				<label class="checkbox-inline"><input class='filter' type="checkbox" value="사용자"
						checked>사용자</label>
			</div>
		</div>

	</div>
</div> -->
<!-- /.filter panel -->
		
<script src="assets/js/popup.js"></script>
<script>

	$(document).ready(function() {
	    var date = new Date();
		var d = date.getDate();
		var m = date.getMonth();
		var y = date.getFullYear();

		/*  className colors

		className: default(transparent), important(red), chill(pink), success(green), info(blue)

		*/


		/* initialize the external events
		-----------------------------------------------------------------*/

		$('#external-events div.external-event').each(function() {

			// create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
			// it doesn't need to have a start or end
			var eventObject = {
				title: $.trim($(this).text()) // use the element's text as the event title
			};

			// store the Event Object in the DOM element so we can get to it later
			$(this).data('eventObject', eventObject);

			// make the event draggable using jQuery UI
			$(this).draggable({
				zIndex: 999,
				revert: true,      // will cause the event to go back to its
				revertDuration: 0  //  original position after the drag
			});

		});


		/* initialize the calendar
		-----------------------------------------------------------------*/

		var calendar =  $('#calendar').fullCalendar({
			header: {
				left: 'title',
				center: 'agendaDay,agendaWeek,month',
				right: 'prev,next today'
			},
			editable: true,
			firstDay: 1, //  1(Monday) this can be changed to 0(Sunday) for the USA system
			selectable: true,
			defaultView: 'month',

			axisFormat: 'h:mm',
			columnFormat: {
                month: 'ddd',    // Mon
                week: 'ddd d', // Mon 7
                day: 'dddd M/d',  // Monday 9/7
                agendaDay: 'dddd d'
            },
            titleFormat: {
                month: 'MMMM yyyy', // September 2009
                week: "MMMM yyyy", // September 2009
                day: 'MMMM yyyy'                  // Tuesday, Sep 8, 2009
            },
			allDaySlot: false,
			selectHelper: true,
			select: function(start, end, allDay) {
				var title = prompt('Event Title:');
				if (title) {
					calendar.fullCalendar('renderEvent',
						{
							title: title,
							start: start,
							end: end,
							allDay: allDay
						},
						true // make the event "stick"
					);
				}
				calendar.fullCalendar('unselect');
			},
			droppable: true, // this allows things to be dropped onto the calendar !!!
			drop: function(date, allDay) { // this function is called when something is dropped

				// retrieve the dropped element's stored Event Object
				var originalEventObject = $(this).data('eventObject');

				// we need to copy it, so that multiple events don't have a reference to the same object
				var copiedEventObject = $.extend({}, originalEventObject);

				// assign it the date that was reported
				copiedEventObject.start = date;
				copiedEventObject.allDay = allDay;

				// render the event on the calendar
				// the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
				$('#calendar').fullCalendar('renderEvent', copiedEventObject, true);

				// is the "remove after drop" checkbox checked?
				if ($('#drop-remove').is(':checked')) {
					// if so, remove the element from the "Draggable Events" list
					$(this).remove();
				}

			},

			events: [
				{
					title: 'All Day Event',
					start: new Date(y, m, 1)
				},
				{
					id: 999,
					title: 'Repeating Event',
					start: new Date(y, m, d-3, 16, 0),
					allDay: false,
					className: 'info'
				},
				{
					id: 999,
					title: 'Repeating Event',
					start: new Date(y, m, d+4, 16, 0),
					allDay: false,
					className: 'info'
				},
				{
					title: 'Meeting',
					start: new Date(y, m, d, 10, 30),
					allDay: false,
					className: 'important'
				},
				{
					title: 'Lunch',
					start: new Date(y, m, d, 12, 0),
					end: new Date(y, m, d, 14, 0),
					allDay: false,
					className: 'important'
				},
				{
					title: 'Birthday Party',
					start: new Date(y, m, d+1, 19, 0),
					end: new Date(y, m, d+1, 22, 30),
					allDay: false,
				},
				{
					title: 'Click for Google',
					start: new Date(y, m, 28),
					end: new Date(y, m, 29),
					url: 'http://google.com/',
					className: 'success'
				}
			],
		});


	});

</script>

<!-- Light Bootstrap Table DEMO methods, don't include it in your project! 
<script src="assets/js/demo.js"></script>-->
<script>
	var app = new Vue({
		el: '#app', // 실행 타겟 지정
		data () { // 데이터 영역
			return {
				title:'',
				todos:[],
				memo:null,
				index:null,
				mode:'add',
				list: [
					{check:true, memo:"부서명/일정/T데이터 쿠폰 카피본 작업/개인정보처리방침 수정 요청/완료/비고내용",status:'created'},
					{check:true, memo:"부서명/일정/TSS 분실파손보험 관련/완료/비고내용", status:'done'},
					{check:true, memo:"부서명/일정/자바 소켓의 종류 [블록킹 / 논블로킹 / 비동기 논블로킹]/완료/비고내용", status:'created'}
				],
				pop_add: false,
				pop_revise: false
			}
		},
		created() {
		},
		computed : {
			countDone () {
				let count = 0
				this.list.forEach(request => {
					if(request.status === "done") count++
				})
				return count;
			}
		},
		methods: {			
			taskadd: function(memo) {
				if (this.memo === null) {
					alert("할일을 입력해주세요.")
				} else {
					this.list.push({memo:this.memo,status:'created'})
					this.memo = null
				}
			},
			taskedit : function (memo,index){ 	
				//console.log('index'+ index)			
				this.memo=memo
				this.index = index
				this.mode="edit"
			},
			listEdit : function(memo,index){
				console.log(this.list)
				this.list[index].memo = memo
				this.memo = null
				this.mode="add"
			},
			taskdel: function(index) {
				//console.log('index'+ index)
				this.list.splice(index, 1)
			},
			statusControl : function(index, status) {
				this.list[index].status = status
			},
			add_layer : function() {
				this.list.push({memo:this.memo,status:'created'})
				this.memo = null;
				this.pop_add = false;
			},
			edit_layer : function(memo,index) {
				this.pop_revise = true;
				this.index = index;
				this.memo = memo;
			},
			edit_layer_btn : function (memo,index) {
				console.log(memo,index)
				this.list[index].memo = memo
				this.memo = null
				this.mode="add"
				this.pop_revise = false;
			}
		 }
	});
	</script>
	
